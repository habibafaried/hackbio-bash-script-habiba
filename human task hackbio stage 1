#WGS: Whole Genome Sequencing (WGS) Analysis Pipeline for Patient X (human)
#======================================================================================
  #module 00 seting
 #make folder to do the task 
  mkdir human cd human
  # Create a new conda environment with the necessary tools
conda create -n genome_analysis -c bioconda -c conda-forge gatk bwa samtools fastqc -y
  conda activate genome_analysis
#check tools versions 
  # Check the version of GATK
echo "Checking GATK version..."
gatk --version
# Check the version of BWA
echo "Checking BWA version..."
bwa --version
# Check the version of Samtools
echo "Checking Samtools version..."
samtools --version
# Check the version of FastQC
echo "Checking FastQC version..."
fastqc --version
  ==========================================================================================================================
  # model 1 download raw data, check the Quality Control and Preprocessing
mkdir raw_reads && cd raw_reads
nano rawreads.sh
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR315/030/SRR31548730/SRR31548730_1.fastq.gz
bash rawreads.sh
#The first step in processing the raw sequencing data is quality control (QC). We will use fastqc to check the quality of the raw FASTQ file and ensure there are no obvious issues with the sequencing data.
#Create a directory to store QC reports
mkdir qc
# Run FastQC to assess the quality of the raw fastq data
fastqc /data/human_stage_1/SRR31548730_1.fastq.gz -O qc
#Explanation:
#fastqc: This tool assesses the quality of the sequencing data (e.g., base quality, GC content).
#-O qc: This flag specifies the output directory for the results.
#The output will be a report as HTML that you can use to evaluate the raw data quality.

======================================================================================
#model 2 Trimming off Low Quality Reads:
  
  nano trim.sh
 mkdir trimm
input_file="SRR31548730_1.fastq.gz"
output_dir="trim"
  fastp -i SRR31548730_1.fastq.gz -o output_clean.fastq.gz \
      -h fastp_report.html \
      -j fastp_report.json \
      --cut_front \
      --cut_tail \
      --cut_mean_quality 20 \
      --length_required 50

#-i input.fastq.gz: The input raw FASTQ file.
#-o output_clean.fastq.gz: The output cleaned FASTQ file after quality control.
#-h fastp_report.html: Generates an HTML report of the quality control process.
#-j fastp_report.json: Generates a JSON report.
#--cut_front: Trims bases from the 5' (front) end of the read until it meets the quality threshold.
#--cut_tail: Trims bases from the 3' (tail) end of the read until it meets the quality threshold.
#--cut_mean_quality 20: Specifies the mean quality score threshold (in this case, 20). Bases below this score will be trimmed.
#-length_required 50: Discards reads that are shorter than 50 bases after trimming.
cp trim.sh raw_reads && cd raw_reads
bash trim.sh
cp -R raw_reads/trim  
#=================================================================================
  #model 3 Genome Mapping
  # in order to make the assembly we need reference seq to align the genome seq we can download it from NCBI
  # we will use bwa to align seq and make genome mapping 
  #1. Create Reference Genome Index with BWA
#The reference genome (Homo_sapiens_assembly38.fasta) needs to be indexed using BWA before we can align the reads to it.
# Index the reference genome using BWA
bwa index /data/ref/Homo_sapiens_assembly38.fasta
#This will generate the following index files:
#Homo_sapiens_assembly38.fasta.bwt
#Homo_sapiens_assembly38.fasta.pac
#Homo_sapiens_assembly38.fasta.sa
#Homo_sapiens_assembly38.fasta.amb
  nano align.sh 
  #2. Genome Mapping (BWA)
#Now, we will use the BWA to map the single-end reads (output_clean.fastq.gz) against the reference genome (Homo_sapiens_assembly38.fasta).
  # Create a directory to store the mapped reads (BAM files) in the humantask directory
mkdir ~/habiba/humantask/mapped
# Run BWA to align the reads to the reference genome using the correct input file
bwa mem -R '@RG\tID:patientX\tSM:patientX\tPL:ILLUMINA' ~/habiba/humantask/reference/Homo_sapiens_assembly38.fasta ~/habiba/humantask/raw_reads/output_clean.fastq.gz | samtools view -b -o ~/habiba/humantask/mapped/patientX_aligned.bam
bash align.sh
#*.fastq.gz: The correct path to the input file output_clean.fastq.gz in the humantask directory.
#Homo_sapiens_assembly38.fasta: The reference genome path in the humantask/reference directory.
#The output BAM file will be stored as patientX_aligned.bam.
#This will align the reads from output_clean.fastq.gz to the reference genome and store the resulting BAM file in the humantask/mapped directory.
  
 # 3. Sorting the BAM File
#The BAM file generated by BWA needs to be sorted by genomic coordinates. This step is required before proceeding with duplicate marking and variant calling.
# Create a directory for sorted BAM files
mkdir -p ~/habiba/humantask/sorted
# Sort the BAM file by genomic coordinates
gatk SortSam -I ~/habiba/humantask/mapped/patientX_aligned.bam -O ~/habiba/humantask/sorted/patientX_sorted.bam -SORT_ORDER coordinate
#Explanation:
#gatk SortSam: Sorts the BAM file by genomic coordinates.
#Output: A sorted BAM file (patientX_sorted.bam).

  #4. Marking Duplicates
#PCR duplicates are artifacts from the sequencing process that need to be removed to avoid biased variant calling. GATK MarkDuplicates is used to identify and flag these duplicates.
# Create a directory for marked BAM files
mkdir -p ~/habiba/humantask/marked
# Mark duplicates in the sorted BAM file
gatk MarkDuplicates -I ~/habiba/humantask/sorted/patientX_sorted.bam -O ~/habiba/humantask/marked/patientX_marked.bam -M ~/habiba/humantask/marked/patientX_metrics.txt
#Explanation:
#gatk MarkDuplicates: Flags duplicates in the BAM file.
#-M: Generates a metrics file that lists the number of duplicates detected.
#Output: A marked BAM file (patientX_marked.bam) and a metrics file (patientX_metrics.txt).
#=============================================================================================
#5. Building BAM Index
#To speed up processing in later steps, we need to create an index file for the marked BAM file.
# Build the BAM index file for the marked BAM file
gatk BuildBamIndex -I ~/habiba/humantask/marked/patientX_marked.bam
#Explanation:
#gatk BuildBamIndex: Generates an index for the BAM file to allow efficient access in later steps.
#Output: patientX_marked.bam.bai (BAM index file).
  
#======================================================================================================================
  # modal 4 Base Quality Score Recalibration (BQSR)
#To correct for systematic errors in base quality scores, we use GATK BaseRecalibrator. We will use the known indels file (Homo_sapiens_assembly38.known_indels.vcf.gz) for this process.
# Create a directory for BQSR output
mkdir -p ~/habiba/humantask/BQSR
# Run BaseRecalibrator to adjust the base quality scores
gatk BaseRecalibrator -I ~/habiba/humantask/marked/patientX_marked.bam -R /data/ref/Homo_sapiens_assembly38.fasta --known-sites ~/habiba/humantask/reference/Homo_sapiens_assembly38.known_indels.vcf.gz -O ~/habiba/humantask/BQSR/patientX_recal.table
# Apply the recalibrated scores to the BAM file
gatk ApplyBQSR -I ~/habiba/humantask/marked/patientX_marked.bam -R /data/ref/Homo_sapiens_assembly38.fasta --bqsr-recal-file ~/habiba/humantask/BQSR/patientX_recal.table -O ~/habiba/humantask/BQSR/patientX_recal.bam
  #Explanation:
#gatk BaseRecalibrator: Identifies patterns of base quality score errors and adjusts the scores.
#gatk ApplyBQSR: Applies the recalibrated quality scores to the BAM file.
#Output: The recalibrated BAM file (patientX_recal.bam).
#============================================================================================
# modal 5 Variant Calling Using HaplotypeCaller
#Now, we will use GATK HaplotypeCaller to identify variants (SNPs and indels) from the recalibrated BAM file.
# Create a directory for VCF files (variant call format)
mkdir -p ~/habiba/humantask/VCF
# Run HaplotypeCaller to call variants and output in GVCF format
gatk HaplotypeCaller -I ~/habiba/humantask/BQSR/patientX_recal.bam \
  -R /home/sararomi/reference/Homo_sapiens_assembly38.fasta \
  -O ~/habiba/humantask/VCF/patientX.g.vcf.gz \
  -ERC GVCF
#Explanation:
#gatk HaplotypeCaller: Identifies SNPs and indels from the recalibrated BAM file and outputs them in GVCF format, which is optimal for multi-sample variant calling.
#Output: The GVCF file (patientX.g.vcf.gz) containing variant calls.
#================================================================================================================
#model 6 Annotating Variants with VEP 
#To interpret the identified variants, we can annotate them using VEP (Variant Effect Predictor). This provides functional information, such as whether the variants affect coding regions or are associated with diseases.
# Annotate the VCF file using VEP (if installed)
vep -i ~/habiba/humantask/VCF/patientX.g.vcf.gz --cache --dir_cache /path/to/vep/cache --output_file ~/habiba/humantask/VCF/patientX_annotated.vcf
#Explanation:
#vep: Variant Effect Predictor annotates the VCF file by providing details about the functional consequences of each variant.
#Output: Annotated VCF file (patientX_annotated.vcf).
# or Your final VCF can  be uploaded to Variant Effect Predictor: https://www.ensembl.org/Multi/Tools/VEP?db=core
# searched for different genes 
#1. rs34126315
#Gene: HBB (Hemoglobin subunit beta)
#Chromosome: 11
#Location: chr11:5,225,469 (hg38)
#Mutation: A → T (in the 6th codon)
#Amino Acid Change: Glu6Val (Glutamic acid to Valine)
#Clinical Significance: This is the canonical sickle cell mutation (also known as HbS). This mutation causes the red blood cells to become sickle-shaped, leading to sickle cell disease. It is a pathogenic variant.
#2. rs34135787
#Gene: HBB (Hemoglobin subunit beta)
#Chromosome: 11
#Location: chr11:5,225,531 (hg38)
#Mutation: C → T (in the 6th codon)
#Amino Acid Change: Glu6Lys (Glutamic acid to Lysine)
#Clinical Significance: This mutation is another form of the sickle cell mutation, where the mutation causes HbS formation, leading to sickle cell disease. This is also a pathogenic variant.
#rs33941849 - Key Information
#Gene: HBB (Hemoglobin subunit beta)
#Chromosome: 11
#Location: chr11:5,225,518 (hg38)
#Mutation: A → T
#Amino Acid Change: Glu6Val (Glutamic acid to Valine)
#Clinical Significance: This variant is also known as HbS and is associated with sickle cell disease (SCD). This mutation causes a glutamic acid to valine substitution at position 6 of the hemoglobin beta chain, leading to sickle-shaped red blood cells and reduced oxygen transport.
#=====================================================================



# WGS Case Report (Patient X) — Variant Discovery → Clinical Interpretation → Management

## TL;DR (Executive Summary)
The clinical picture (lifelong hemolytic anemia, painful crises, jaundice; African ancestry) is classic for a hemoglobinopathy, most likely **Sickle Cell Disease (SCD)** due to a pathogenic missense variant in **_HBB_**.  
My provided pipeline produces a gVCF for Patient X. After joint genotyping and annotation, I prioritize the well-known _HBB_ variant **“HbS” (rs334; HGVS: NM_000518.5:c.20A>T → p.Glu7Val; legacy “E6V”)** and/or compound heterozygosity with another _HBB_ pathogenic allele (e.g., **HbC: rs33930165; “E6K”**) or a β-thalassemia variant.

---

## 0) Pipeline Status (left as-is)
I keep the original code unchanged. It sets up: **QC → trimming → alignment → sorting/dup-marking → BQSR → HaplotypeCaller (gVCF) → VEP**.  
I use it exactly as written to generate `patientX.g.vcf.gz` and VEP annotations.

---

## 1) Objectives After the Pipeline Finishes

### 1.1 Identify the Causal Mutation
Once `patientX.g.vcf.gz` (and the mother’s `patientY.g.vcf.gz`) exist, I perform joint genotyping and focus on the **_HBB_** region.

**Note.** The canonical SCD variant is **rs334 (HbS)** in _HBB_ exon 1, **c.20A>T → p.Glu7Val** (often reported as p.Glu6Val in legacy notation). Another common allele is **HbC (rs33930165, Glu→Lys at the same codon)**. Either **homozygosity for HbS (SS)** or **compound heterozygosity (S/C or S/β-thal)** fits the phenotype.

#### Add-on commands (kept separate; do not replace the original script)
```bash
# A) Joint genotyping to get a standard VCF for Patient X
gatk GenotypeGVCFs \
  -R /data/ref/Homo_sapiens_assembly38.fasta \
  -V ~/habiba/humantask/VCF/patientX.g.vcf.gz \
  -O ~/habiba/humantask/VCF/patientX.vcf.gz

# (Optional) Mother: run GenotypeGVCFs on patientY.g.vcf.gz, or combine both gVCFs first:
# gatk CombineGVCFs ... ; gatk GenotypeGVCFs ...

# B) Define the HBB locus (hg38) and extract variants from Patient X
cat > ~/habiba/humantask/reference/HBB.hg38.bed <<EOF
#chr    start    end    gene
11      5225465  5227232 HBB
EOF

gatk SelectVariants \
  -R /data/ref/Homo_sapiens_assembly38.fasta \
  -V ~/habiba/humantask/VCF/patientX.vcf.gz \
  -L ~/habiba/humantask/reference/HBB.hg38.bed \
  -O ~/habiba/humantask/VCF/patientX_HBB.vcf.gz

# C) (Optional) Search key rsIDs if present
zcat ~/habiba/humantask/VCF/patientX_HBB.vcf.gz | grep -E 'rs334|rs33930165' || true
If dbSNP IDs are absent, I rely on VEP HGVS/amino-acid change to find c.20A>T (p.Glu7Val) or c.19G>A (p.Glu7Lys). (AA numbering 6 vs 7 is a notation difference, not a biology difference.)

1.2 Annotate and Interpret the Mutation
VEP provides consequence and HGVS annotations.

Confirm gene/variant. HBB exon 1 missense at codon 6/7; rs334 (HbS) or rs33930165 (HbC), or a β-thalassemia pathogenic variant in HBB.
Zygosity checks.
Patient X homozygous HbS (SS) → definitive SCD.
Patient X HbS/HbC → SC disease (vaso-occlusive phenotype).
Patient X HbS + β-thal pathogenic variant → S/β-thal.
Heterozygous HbS only (trait) typically does not explain severe phenotype; expand differential (see §1.4).
ACMG/AMP (concise).

HBB c.20A>T (p.Glu7Val); rs334, “HbS”
PS1/PS4 (established pathogenic, strong association), PP5 (reputable sources), PP3 (mechanistic/functional).
Classification: Pathogenic.
HBB c.19G>A (p.Glu7Lys); rs33930165, “HbC”
Pathogenic; SC compound heterozygosity is a recognized SCD genotype.
⚠️ The rsIDs rs34126315, rs34135787, rs33941849 do not correspond to canonical HbS/HbC. I cross-check with rs334 and rs33930165.

1.3 Clinical Recommendations
Diagnostic confirmation

Sanger sequencing of HBB exon 1 in Patient X (and mother).
Hemoglobin electrophoresis/HPLC to quantify HbS (± HbC/β-thal pattern).
Family studies: targeted testing of first-degree relatives; include the father if available.
Initial management (adult SCD summary)

Hydroxyurea to raise HbF and reduce crises.
Folic acid, vaccinations (pneumococcal, meningococcal, Hib, influenza), infection prophylaxis per guidelines.
Crisis plan: rapid assessment, hydration, analgesia; avoid cold, dehydration, hypoxia.
Transfusion protocols for severe anemia/ACS/stroke prevention; consider exchange transfusion in severe events.
Adjuncts/DMAs: crizanlizumab, L-glutamine, voxelotor where indicated/available.
Curative option: consider HSCT for severe disease; follow access to gene-therapy programs.
Comorbidity screening: stroke/TCD, pulmonary hypertension, renal dysfunction, retinopathy, AVN, leg ulcers.
Genetic counseling: reproductive options; partner testing.
1.4 If HBB Is Not Diagnostic
Evaluate G6PD (common in African ancestry; enzyme deficiency → hemolysis, jaundice), including CNVs/deficiency alleles.
Consider other hemoglobinopathies (HBA1/2 deletions, HPFH), membranopathies (ANK1, SLC4A1, SPTA1), enzymopathies (PKLR).
Apply phenotype-driven panels and inheritance modeling consistent with maternal genotype and missing paternal data.
2) Minimal, Safe Post-Pipeline Commands (for triage)
# 1) Joint genotyping for Patient X
gatk GenotypeGVCFs \
  -R /data/ref/Homo_sapiens_assembly38.fasta \
  -V ~/habiba/humantask/VCF/patientX.g.vcf.gz \
  -O ~/habiba/humantask/VCF/patientX.vcf.gz

# 2) Extract HBB and make a quick review table
gatk SelectVariants \
  -R /data/ref/Homo_sapiens_assembly38.fasta \
  -V ~/habiba/humantask/VCF/patientX.vcf.gz \
  -L ~/habiba/humantask/reference/HBB.hg38.bed \
  -O ~/habiba/humantask/VCF/patientX_HBB.vcf.gz

gatk VariantsToTable \
  -V ~/habiba/humantask/VCF/patientX_HBB.vcf.gz \
  -F CHROM -F POS -F ID -F REF -F ALT -F QUAL -F AC -F AF -F AN \
  -GF GT -GF AD -GF DP -GF GQ \
  -O ~/habiba/humantask/VCF/patientX_HBB.table

# 3) Repeat for the mother to check segregation (produce patientY_HBB.table similarly)

# 4) Inspect VEP-annotated file for consequence/HGVS
grep -E 'HBB|rs334|rs33930165' ~/habiba/humantask/VCF/patientX_annotated.vcf | head
Review targets

ID: rs334 (preferred) or consequence text indicating p.Glu7Val / p.Glu6Val in HBB.
Genotype (GT):
1/1 → SS.
0/1 at HbS and 0/1 at another pathogenic HBB site → compound heterozygote (e.g., SC).
DP/AD: adequate depth (e.g., DP ≥ 10–20) and expected alt fraction for the genotype.
3) Clinical-Grade Reporting — Concise Template
Gene/Variant: HBB, c.20A>T (p.Glu7Val); rs334 (“HbS”).
Zygosity: (fill from VCF/IGV; e.g., homozygous in Patient X; heterozygous in mother).
Classification: Pathogenic (ACMG/AMP: PS1, PS4, PP3, PP5).
Phenotype Match: Consistent with Sickle Cell Disease (vaso-occlusive crises, hemolytic anemia, jaundice).
Recommended Confirmation: Sanger of HBB exon 1; hemoglobin electrophoresis/HPLC.
Management Summary: Hydroxyurea; vaccinations/prophylaxis; crisis protocol; consider crizanlizumab/L-glutamine/voxelotor; transfusion strategies; HSCT evaluation; organ complication screening; genetic counseling.
Family Implications: Carrier testing for relatives; reproductive counseling.
4) Quality & Pitfalls Checklist
✅ Adequate coverage at HBB exon 1; inspect BAM around β-globin cluster.
✅ Dup-marking/BQSR completed.
✅ rsID presence may vary; fall back to VEP HGVS.
✅ 6 vs 7 AA numbering differences are purely notational.
✅ If genotype is insufficient to explain phenotype (e.g., trait only), broaden the search (G6PD, membranopathies, enzymopathies).

#================================================================================================================
links 
github: https://github.com/habibafaried/hackbio-bash-script-habiba/blob/main/human%20task%20hackbio%20stage%201
linkedin: https://www.linkedin.com/posts/habiba-faried-a62bb11b0_hackbio-bash-linux-activity-7366582020027703296-s0Vk?utm_source=share&utm_medium=member_android&rcm=ACoAADFMi6oBwjx2cbYE0OvQ1vQcA7FnBUzmvb
